{
  "objects": [
    {
      "objectType": "function",
      "fullName": "\"public\".\"get_customer_balance(int4, timestamptz)\"",
      "text": "\r\n       --#OK, WE NEED TO CALCULATE THE CURRENT BALANCE GIVEN A CUSTOMER_ID AND A DATE\r\n       --#THAT WE WANT THE BALANCE TO BE EFFECTIVE FOR. THE BALANCE IS:\r\n       --#   1) RENTAL FEES FOR ALL PREVIOUS RENTALS\r\n       --#   2) ONE DOLLAR FOR EVERY DAY THE PREVIOUS RENTALS ARE OVERDUE\r\n       --#   3) IF A FILM IS MORE THAN RENTAL_DURATION * 2 OVERDUE, CHARGE THE REPLACEMENT_COST\r\n       --#   4) SUBTRACT ALL PAYMENTS MADE BEFORE THE DATE SPECIFIED\r\nDECLARE\r\n    v_rentfees DECIMAL(5,2); --#FEES PAID TO RENT THE VIDEOS INITIALLY\r\n    v_overfees INTEGER;      --#LATE FEES FOR PRIOR RENTALS\r\n    v_payments DECIMAL(5,2); --#SUM OF PAYMENTS MADE PREVIOUSLY\r\nBEGIN\r\n    SELECT COALESCE(SUM(film.rental_rate),0) INTO v_rentfees\r\n    FROM film, inventory, rental\r\n    WHERE film.film_id = inventory.film_id\r\n      AND inventory.inventory_id = rental.inventory_id\r\n      AND rental.rental_date <= p_effective_date\r\n      AND rental.customer_id = p_customer_id;\r\n\r\n    SELECT COALESCE(SUM(IF((rental.return_date - rental.rental_date) > (film.rental_duration * '1 day'::interval),\r\n        ((rental.return_date - rental.rental_date) - (film.rental_duration * '1 day'::interval)),0)),0) INTO v_overfees\r\n    FROM rental, inventory, film\r\n    WHERE film.film_id = inventory.film_id\r\n      AND inventory.inventory_id = rental.inventory_id\r\n      AND rental.rental_date <= p_effective_date\r\n      AND rental.customer_id = p_customer_id;\r\n\r\n    SELECT COALESCE(SUM(payment.amount),0) INTO v_payments\r\n    FROM payment\r\n    WHERE payment.payment_date <= p_effective_date\r\n    AND payment.customer_id = p_customer_id;\r\n\r\n    RETURN v_rentfees + v_overfees - v_payments;\r\nEND\r\n",
      "returnType": "numeric",
      "arguments": [
        {
          "name": "p_customer_id",
          "type": "int4",
          "mode": "IN"
        },
        {
          "name": "p_effective_date",
          "type": "timestamptz",
          "mode": "IN"
        }
      ],
      "language": "plpgsql"
    }
  ]
}
